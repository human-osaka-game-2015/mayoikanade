#ifndef XINPUT_LIB_H
#define XINPUT_LIB_H


#include <windows.h>
#include <mmsystem.h>
#include <XInput.h>


typedef struct
{
	XINPUT_STATE		State;
	XINPUT_VIBRATION	Vib_State;
}CONTROLER_STATE;





enum XINPUT_ID
{
	GAMEPAD_DANALOG_UP,
	GAMEPAD_DANALOG_DOWN,
	GAMEPAD_DANALOG_LEFT,
	GAMEPAD_DANALOG_RIGHT,
	GAMEPAD_START,
	GAMEPAD_BACK,
	GAMEANALOG_LEFT_THUMB,
	GAMEANALOG_RIGHT_THUMB,
	GAMEANALOG_LEFT_SHOULDER,
	GAMEANALOG_RIGHT_SHOULDER,
	GAMEPAD_A,
	GAMEPAD_B,
	GAMEPAD_X,
	GAMEPAD_Y,
	XINPUT_IDMAX
};

enum XINPUTPAD
{
	GAMEPAD1,
	GAMEPAD2,
	GAMEPAD3,
	GAMEPAD4,
	GAMEANALOG_MAX
};

enum PADSTATE 
{
	PAD_PUSH,
	PAD_RELEASE,
	PAD_ON,
	PAD_OFF
};

enum ANALOGPAD
{
	ANALOG_LEFT,
	ANALOG_RIGHT,
	ANALOG_UP,
	ANALOG_DOWN,
	ANALOG_MAX
};


class XInput
{
private:
	CONTROLER_STATE m_PadControlState[GAMEANALOG_MAX];
	PADSTATE m_PadOldState[GAMEANALOG_MAX][XINPUT_IDMAX];
	PADSTATE m_PadState[GAMEANALOG_MAX][XINPUT_IDMAX];


public:
	XInput();
	~XInput();

	void Check(XINPUTPAD pad);
	PADSTATE GetButtonState(XINPUT_ID id, XINPUTPAD pad);
	bool GetAnalogState(ANALOGPAD id, XINPUTPAD pad);

};

#endif
